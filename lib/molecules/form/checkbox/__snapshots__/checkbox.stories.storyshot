// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Design System/Molecules/Form/Checkbox Knobs 1`] = `
.c3 {
  font-family: 'Lato',Tahoma,sans-serif,arial;
  font-display: swap;
  font-weight: 400;
  font-size: 1.2rem;
  line-height: 1.8rem;
}

.c4 {
  color: #AFB0B2;
  margin-top: 8px;
}

.c0 {
  padding-bottom: 16px;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  cursor: default;
  padding: 10px 0;
  color: #565A5C;
  cursor: pointer;
}

.c1:hover > input + span {
  border-color: #008A83;
}

.c2 {
  margin-right: 20px;
  display: none;
}

.c2 + span {
  position: relative;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 20px;
  height: 20px;
  border-radius: 2px;
  margin-right: 8px;
  border-width: 1px;
  border-style: solid;
}

<div
  className="c0"
>
  <label
    className="c1"
    disabled={false}
  >
    <input
      checked={false}
      className="c2"
      disabled={false}
      id="uniqueId"
      name="myCheckbox"
      onBlur={[Function]}
      onChange={[Function]}
      type="checkbox"
      value={false}
    />
    <span />
    My checkbox
  </label>
  <div
    className="c3 c4"
  >
    This is a little helper message
  </div>
</div>
`;

exports[`Storyshots Design System/Molecules/Form/Checkbox Working example 1`] = `
Array [
  .c3 {
  font-family: 'Lato',Tahoma,sans-serif,arial;
  font-display: swap;
  font-weight: 400;
  font-size: 1.2rem;
  line-height: 1.8rem;
}

.c4 {
  color: #AFB0B2;
  margin-top: 8px;
}

.c0 {
  padding-bottom: 16px;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  cursor: default;
  padding: 10px 0;
  color: #565A5C;
  cursor: pointer;
}

.c1:hover > input + span {
  border-color: #008A83;
}

.c2 {
  margin-right: 20px;
  display: none;
}

.c2 + span {
  position: relative;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 20px;
  height: 20px;
  border-radius: 2px;
  margin-right: 8px;
  border-width: 1px;
  border-style: solid;
}

.c2 + span {
  border-color: #008A83;
  background-color: #008A83;
}

.c2 + span svg {
  color: #FFF;
  position: absolute;
  width: 20px;
  height: 20px;
}

<div
    className="c0"
  >
    <label
      className="c1"
      disabled={false}
    >
      <input
        checked={true}
        className="c2"
        disabled={false}
        id="uniqueId"
        name="myCheckbox"
        onBlur={[Function]}
        onChange={[Function]}
        type="checkbox"
        value={true}
      />
      <span>
        <div
          className=""
        />
      </span>
      <span>
        my checkbox
      </span>
    </label>
    <div
      className="c3 c4"
    >
      This a a little helper message
    </div>
  </div>,
  <hr />,
  <div>
    isChecked
  </div>,
]
`;
